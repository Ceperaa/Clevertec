plugins {
    id 'groovy'
    id 'java'
    id 'war'
}

group 'ru.clevertec'
version '1.0'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

war {
    enabled true
}

ext.versions = [
        'spring'    : '5.3.22',
        'lombok'    : '1.18.24',
        'itext7'    : '7.2.1',

        'snakeYaml' : '1.30',
        'gson'      : '2.9.0',
        'databind'  : '2.13.3',
        'slf4j'     : '1.7.36',
        'log4j'     : '2.18.0',
        'yaml'      : '2.13.3',
        'mapStruct' : '1.5.2.Final',
        'hibernate' : '5.6.10.Final',

        'javaEE'    : '8.0.1',
        'postgresql': '42.4.0',

        'junit'     : '5.8.2',
        'mockito'   : '4.7.0',
        'liquibase' : '4.3.5',
]

dependencies {
    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    testCompileOnly "org.projectlombok:lombok:${versions.lombok}"

    implementation "org.springframework:spring-jdbc:${versions.spring}"
    implementation "org.springframework:spring-context:${versions.spring}"
    implementation "org.springframework:spring-tx:${versions.spring}"
    implementation "org.springframework:spring-orm:${versions.spring}"
    implementation "org.springframework.data:spring-data-jpa:2.6.1"

    implementation "org.mapstruct:mapstruct:${versions.mapStruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapStruct}"

    implementation "org.hibernate:hibernate-core:${versions.hibernate}"
    implementation "com.google.code.gson:gson:${versions.gson}"

    compileOnly "javax:javaee-api:${versions.javaEE}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.databind}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${versions.yaml}"

    implementation "org.slf4j:slf4j-api:${versions.slf4j}"
    implementation "org.apache.logging.log4j:log4j-core:${versions.log4j}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}"

    testCompileOnly "junit:junit:4.13.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
    testImplementation "org.mockito:mockito-all:1.10.19"


    implementation "org.postgresql:postgresql:${versions.postgresql}"

    implementation "com.itextpdf:itext7-core:${versions.itext7}"
    implementation "org.liquibase:liquibase-core:${versions.liquibase}"
    compileOnly "org.codehaus.groovy:groovy-all:2.3.11"
}

test {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces false
    }
}

