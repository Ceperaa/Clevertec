plugins {
    id 'groovy'
    id 'java'
    id 'war'
}

group 'ru.clevertec'
version '1.0'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

war {
    enabled true
}

dependencies {
    implementation 'org.springframework:spring-jdbc:5.3.22'
    implementation 'org.springframework:spring-core:5.3.22'
    implementation 'org.springframework:spring-context:5.3.22'
    implementation 'org.springframework:spring-tx:5.3.22'
    implementation 'org.springframework.data:spring-data-jpa:2.6.1'
    implementation 'org.springframework:spring-orm:5.3.22'


    implementation 'org.hibernate:hibernate-core:5.6.1.Final'
    implementation 'com.google.code.gson:gson:2.9.0'

    compileOnly 'javax:javaee-api:8.0.1'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3'

    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'

    implementation 'org.modelmapper:modelmapper:3.1.0'

    testCompile 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-all:1.10.19'


    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'

    implementation 'org.postgresql:postgresql:42.4.0'

    implementation 'com.itextpdf:itext7-core:7.2.1'
    implementation 'org.liquibase:liquibase-core:4.3.5'
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
}

test {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces false
    }
}

class DownLoader extends DefaultTask {
    @Input
    String sourceUrl
    @OutputFile
    File target

    @TaskAction
    void download() {
        try {
            ant.get(src: sourceUrl, dest: target)
        } catch (Exception e) {
            print e
        }
    }
}

task download(type: DownLoader) {
    sourceUrl = "https://raw.githubusercontent.com/Ceperaa/Clevertec/gradleTask/Cash%20register/src/main/java/ru/clevertec/check/runner/streamIO/files/CheckFile.CSV"
    target = new File('logs.files.CheckFile.CSV')
}
build.dependsOn download
